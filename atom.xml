<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jonty&#39;s Blog</title>
  <subtitle>夫君子之行，静以修身，俭以养德。非淡泊无以明志， 非宁静无以致远。</subtitle>
  <link href="/atom.xml" rel="self"/>

  <link href="https://jontylee.github.io/"/>
  <updated>2017-03-20T02:06:22.581Z</updated>
  <id>https://jontylee.github.io/</id>

  <author>
    <name>李建林(Jonty Lee)</name>

  </author>

  <generator uri="http://hexo.io/">Hexo</generator>

  <entry>
    <title>SVN服务搭建</title>
    <link href="https://jontylee.github.io/SVN-Use/"/>
    <id>https://jontylee.github.io/SVN-Use/</id>
    <published>2017-03-15T11:21:01.000Z</published>
    <updated>2017-03-20T02:06:22.581Z</updated>

    <content type="html"><![CDATA[<p>协同处理一些项目时，需要一个项目管理工具，来随时查看多人修改的文档，图片等，对于程序开发，一个好的项目管理工具可以大大提升工作效率。目前用的比较多的应该算是SVN和Git了。SVN（<a href="https://baike.baidu.com/link?url=px7lg0hFn6zp4hFqKREgTX0jrwvclqIjl5f3i-csu1WbjvCX1k4av838WM7u1I93Q5y0EWX1MAbvcHs1-e2Diq" target="_blank" rel="external">百度百科词条</a>）是Subversion的简称，是一个开放源代码的版本控制系统，相较于RCS、CVS，它采用了分支管理系统，它的设计目标就是取代CVS。互联网上很多版本控制服务已从CVS迁移到Subversion。说得简单一点SVN就是用于多个人共同开发同一个项目，共用资源的目的。</p>
<h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><p>在CentOS上安装SVN服务端。</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>root用户执行命令时不用加sudo。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo yum install subversion -y <span class="comment"># 安装SVN服务</span></div></pre></td></tr></table></figure></p>
<p>查看是否安装完成，执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ svnserve --version</div><div class="line">svnserve, version 1.7.14 (r1542130)</div><div class="line">   compiled Nov 20 2015, 19:25:09</div><div class="line"></div><div class="line">Copyright (C) 2013 The Apache Software Foundation.</div><div class="line">This software consists of contributions made by many people; see the NOTICE</div><div class="line">file <span class="keyword">for</span> more information.</div><div class="line">Subversion is open <span class="built_in">source</span> software, see http://subversion.apache.org/</div><div class="line"></div><div class="line">The following repository back-end (FS) modules are available:</div><div class="line"></div><div class="line">* fs_base : Module <span class="keyword">for</span> working with a Berkeley DB repository.</div><div class="line">* fs_fs : Module <span class="keyword">for</span> working with a plain file (FSFS) repository.</div><div class="line"></div><div class="line">Cyrus SASL authentication is available.</div></pre></td></tr></table></figure></p>
<h4 id="创建版本库存放目录"><a href="#创建版本库存放目录" class="headerlink" title="创建版本库存放目录"></a>创建版本库存放目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mkdir /home/vagrant/svn</div></pre></td></tr></table></figure>
<h4 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ svnadmin create /home/vagrant/svn/FirstRepo <span class="comment"># 创建第一个项目</span></div><div class="line">$ svnadmin create /home/vagrant/svn/SecoRepo  <span class="comment"># 创建第二个项目</span></div></pre></td></tr></table></figure>
<h4 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h4><p>多个版本库我们需要使用同一套验证来管理，以便于后期维护，首先先查看项目目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ ls /home/vagrant/svn/FirstRepo/conf <span class="comment"># 查看下目录文件，有三个文件</span></div><div class="line">authz  passwd  svnserve.conf</div><div class="line">$ ls /home/vagrant/svn/SecoRepo/conf</div><div class="line">authz  passwd  svnserve.conf</div></pre></td></tr></table></figure></p>
<p>authz文件存放着用户和用户组对不同目录的读写权限，passwd存放着用户名和密码，svnserve.conf则是对svnserve进程进行控制管理，权限校验方式等配置的服务文件。<br>我们把FirstRepo下的authz和passwd文件移动到/home/vagrant/svn目录，再修改对应版本库下的svnserve.conf文件即可实现对多个版本库的访问配置。现在逐一修改这些配置文件，来完成服务端的配置。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mv /home/vagrant/svn/FirstRepo/conf/passwd /home/vagrant/svn/</div><div class="line">$ mv /home/vagrant/svn/FirstRepo/conf/authz /home/vagrant/svn/</div></pre></td></tr></table></figure></p>
<p>修改各版本目录下的svnserve.conf，分别找到<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># anon access = read</span></div><div class="line"><span class="comment"># authz access = write</span></div><div class="line"><span class="comment"># password-db = passwd</span></div><div class="line"><span class="comment"># authz-db = authz</span></div></pre></td></tr></table></figure></p>
<p>修改为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">anon access = none <span class="comment"># 匿名用户无访问权限</span></div><div class="line">authz access = write <span class="comment"># 通过authz验证的用户具备可读写的权限</span></div><div class="line">password-db = /home/vagrant/svn/passwd <span class="comment"># 用户密码库</span></div><div class="line">authz-db = /home/vagrant/svn/authz <span class="comment"># 权限验证库</span></div></pre></td></tr></table></figure></p>
<p>接下来，根据用户的权限来建立用户及用户组和对应目录的权限分配。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ sudo vi passwd <span class="comment"># 建立用户名和对应密码，显示如下</span></div><div class="line"><span class="comment">### This file is an example password file for svnserve.</span></div><div class="line"><span class="comment">### Its format is similar to that of svnserve.conf. As shown in the</span></div><div class="line"><span class="comment">### example below it contains one section labelled [users].</span></div><div class="line"><span class="comment">### The name and password for each user follow, one account per line.</span></div><div class="line"></div><div class="line">[users]</div><div class="line"><span class="comment"># harry = harryssecret</span></div><div class="line"><span class="comment"># sally = sallyssecret</span></div></pre></td></tr></table></figure></p>
<p>在users这个节点下，按照注释的格式，加入几个用户。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">### This file is an example password file for svnserve.</span></div><div class="line"><span class="comment">### Its format is similar to that of svnserve.conf. As shown in the</span></div><div class="line"><span class="comment">### example below it contains one section labelled [users].</span></div><div class="line"><span class="comment">### The name and password for each user follow, one account per line.</span></div><div class="line"></div><div class="line">[users]</div><div class="line"><span class="comment"># harry = harryssecret</span></div><div class="line"><span class="comment"># sally = sallyssecret</span></div><div class="line">admin = admin <span class="comment"># 管理员</span></div><div class="line">manager = manager <span class="comment"># 项目经理</span></div><div class="line"><span class="comment"># 苦逼的码农</span></div><div class="line">programer1 = programer1</div><div class="line">programer2 = programer2</div><div class="line">programer3 = programer3</div><div class="line">programer4 = programer4</div><div class="line">programer5 = programer5</div><div class="line">programer6 = programer6</div><div class="line">programer7 = programer7</div><div class="line"><span class="comment"># 测试人员</span></div><div class="line"><span class="built_in">test</span>123 = 123</div><div class="line"><span class="built_in">test</span>256 = 256</div></pre></td></tr></table></figure></p>
<p>保存退出。再修改对应用户的读写权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">$ sudo vi authz <span class="comment"># 显示如下</span></div><div class="line"><span class="comment">### This file is an example authorization file for svnserve.</span></div><div class="line"><span class="comment">### Its format is identical to that of mod_authz_svn authorization</span></div><div class="line"><span class="comment">### files.</span></div><div class="line"><span class="comment">### As shown below each section defines authorizations for the path and</span></div><div class="line"><span class="comment">### (optional) repository specified by the section name.</span></div><div class="line"><span class="comment">### The authorizations follow. An authorization line can refer to:</span></div><div class="line"><span class="comment">###  - a single user,</span></div><div class="line"><span class="comment">###  - a group of users defined in a special [groups] section,</span></div><div class="line"><span class="comment">###  - an alias defined in a special [aliases] section,</span></div><div class="line"><span class="comment">###  - all authenticated users, using the '$authenticated' token,</span></div><div class="line"><span class="comment">###  - only anonymous users, using the '$anonymous' token,</span></div><div class="line"><span class="comment">###  - anyone, using the '*' wildcard.</span></div><div class="line"><span class="comment">###</span></div><div class="line"><span class="comment">### A match can be inverted by prefixing the rule with '/home/vagrant'. Rules can</span></div><div class="line"><span class="comment">### grant read ('r') access, read-write ('rw') access, or no access</span></div><div class="line"><span class="comment">### ('').</span></div><div class="line"></div><div class="line">[aliases]</div><div class="line"><span class="comment"># joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil, Ltd./OU=Research Institute/CN=Joe Average</span></div><div class="line"></div><div class="line">[groups]</div><div class="line"><span class="comment"># harry_and_sally = harry,sally</span></div><div class="line"><span class="comment"># harry_sally_and_joe = harry,sally,&amp;joe</span></div><div class="line"></div><div class="line"><span class="comment"># [/foo/bar]</span></div><div class="line"><span class="comment"># harry = rw</span></div><div class="line"><span class="comment"># &amp;joe = r</span></div><div class="line"><span class="comment"># * =</span></div><div class="line"></div><div class="line"><span class="comment"># [repository:/baz/fuz]</span></div><div class="line"><span class="comment"># @harry_and_sally = rw</span></div><div class="line"><span class="comment"># * = r</span></div></pre></td></tr></table></figure></p>
<p>aliases给用户建立别名，groups给用户分组，另外两个节点则是对SVN版本及相关目录的用户权限控制，修改如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">[aliases]</div><div class="line">t1 = <span class="built_in">test</span>123</div><div class="line">t2 = <span class="built_in">test</span>256</div><div class="line"></div><div class="line">[groups]</div><div class="line">proj1 = programer1,programer2,programer3,&amp;t1 <span class="comment"># 使用&amp;引用别名</span></div><div class="line">proj2 = programer4,programer5</div><div class="line"></div><div class="line">[/]  <span class="comment"># SVN根目录权限配置</span></div><div class="line">admin = rw <span class="comment"># 给admin用户分配可读可写权限</span></div><div class="line">manager = rw </div><div class="line"></div><div class="line">[FirstRepo:/] <span class="comment"># FirstRepo项目根目录权限配置</span></div><div class="line">@proj1 = rw <span class="comment"># 使用@引用用户组，给FirstRepo用户组分配可读可写权限</span></div><div class="line">programer6 = r <span class="comment"># 给programer6分配只读权限</span></div><div class="line"></div><div class="line">[SecoRepo:/]</div><div class="line">@proj2 = rw </div><div class="line">&amp;t1 = r</div><div class="line"></div><div class="line">[SecoRepo:/trunk]</div><div class="line">programer7 = r <span class="comment"># 给programer7分配SecoRepo项目下trunk目录的可读权限</span></div><div class="line">&amp;t2 = rw</div></pre></td></tr></table></figure></p>
<p>保存退出。启动服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ svnserve <span class="_">-d</span> -r /home/vagrant/svn <span class="comment"># -d表示服务在后台执行，-r设置svn根目录</span></div></pre></td></tr></table></figure></p>
<h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><ul>
<li><p>CentOS</p>
<h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo yum install subversion -y</div></pre></td></tr></table></figure>
<h4 id="检出"><a href="#检出" class="headerlink" title="检出"></a>检出</h4><p>  实际我们在客户端使用时，只需使用一个用户认证即可，检出时不需要加上‘–username’参数，这里是为了进行测试，依次使用authz中配置的用户来测试，将以下命令的ip地址替换为你搭建svnserve服务所在的ip地址</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ svn co svn://10.2.100.185/FirstRepo --username <span class="string">'admin'</span> <span class="comment"># 依次替换admin为programer1,programer6,test123，都可以检出成功</span></div><div class="line">Authentication realm: &lt;svn://10.2.100.185:3690&gt; 978bcb94-bb76-4a3e-9698-b348e7e1504c</div><div class="line">Password <span class="keyword">for</span> <span class="string">'admin'</span>: *****</div><div class="line">Checked out revision 0.</div><div class="line">$ svn co svn://10.2.100.185/FirstRepo --username <span class="string">'programer4'</span> <span class="comment"># 使用programer4，即使输入了正确的密码也会提示认证失败</span></div><div class="line">Authentication realm: &lt;svn://10.2.100.185:3690&gt; 5fabb029-bd82-461c-853f-ecd633dda130</div><div class="line">Password <span class="keyword">for</span> <span class="string">'programer4'</span>: **********</div><div class="line">svn: E170001: Authorization failed</div></pre></td></tr></table></figure>
<h4 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h4>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> FirstRepo <span class="comment"># 进入检出的仓库</span></div><div class="line">$ touch index.txt <span class="comment"># 创建一个测试文本</span></div><div class="line">$ svn add index.txt <span class="comment"># 将index.text加入版本控制中</span></div><div class="line">A         index.txt</div><div class="line">$ svn status <span class="comment"># 查看当前版本库状态，后面可以加上具体的路径地址</span></div><div class="line">A         index.txt</div><div class="line">$ svn ci index.txt -m <span class="string">'第一次提交'</span> --username <span class="string">'admin'</span> <span class="comment"># 可以依次测试用户是否有写权限。提交时必须要用‘-m’参数，添加提交说明</span></div><div class="line">Authentication realm: &lt;svn://10.2.100.185:3690&gt; b23e296a-0c64-4b8a-b4ea<span class="_">-a</span>917058ec936</div><div class="line">Password <span class="keyword">for</span> <span class="string">'admin'</span>: *****</div><div class="line">Adding         index.txt</div><div class="line">Transmitting file data .done</div><div class="line">Committing transaction...</div><div class="line">Committed revision 1.</div></pre></td></tr></table></figure>
<h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><p>  别人提交后，你需要更新过来查看，再进行修改</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ svn up <span class="comment"># 进入到版本目录后，执行，其后可以指定更新的目录或文件</span></div></pre></td></tr></table></figure>
<p>  其他常见命令可以使用‘svn help’来查看。</p>
</li>
<li>Windows<h4 id="检出-1"><a href="#检出-1" class="headerlink" title="检出"></a>检出</h4>Windows下有图形界面的SVN管理工具<a href="https://tortoisesvn.net/" target="_blank" rel="external">TortoiseSvn</a>，安装下载后命令直接集成在鼠标右键。在你想检出版本库的目录下，点击右键，找到‘svn checkout’或者‘svn 检出’，输入svn地址和检出到本地目录的地址，点击确定，再弹出的输入框输入用户名和密码即可。<br><img src="https://www.tuchuang001.com/images/2017/03/20/SVN-CO.png" alt="SVN-CO"><h4 id="更新-1"><a href="#更新-1" class="headerlink" title="更新"></a>更新</h4>在你想更新的文件和目录上，点击右键，再点击‘SVN Update’或‘SVN 更新’，即可。<h4 id="提交-1"><a href="#提交-1" class="headerlink" title="提交"></a>提交</h4>在你想更新的文件和目录上，点击右键，再点击‘SVN Commit’或‘SVN 提交’，在弹出的弹窗中输入提交消息，如果是提交的文件夹，可以选择提交文件夹下的文件。<br>提交指定文件：<br><img src="https://www.tuchuang001.com/images/2017/03/20/SVN-CI-Single.png" alt="SVN-CI-Single"><br>提交指定文件夹：<br><img src="https://www.tuchuang001.com/images/2017/03/20/SVN-CI-Multi.png" alt="SVN-Multi"><br>其他命令及设置，右键选择TortoiseSvn查看。<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3>可以参见SVN官网<a href="http://subversion.apache.org/" target="_blank" rel="external">http://subversion.apache.org/</a></li>
</ul>
]]></content>

    <summary type="html">

      &lt;p&gt;协同处理一些项目时，需要一个项目管理工具，来随时查看多人修改的文档，图片等，对于程序开发，一个好的项目管理工具可以大大提升工作效率。目前用的比较多的应该算是SVN和Git了。SVN（&lt;a href=&quot;https://baike.baidu.com/link?url=px7l

    </summary>

      <category term="服务器旅程" scheme="https://jontylee.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%97%85%E7%A8%8B/"/>


      <category term="Linux" scheme="https://jontylee.github.io/tags/Linux/"/>

      <category term="SVN" scheme="https://jontylee.github.io/tags/SVN/"/>

  </entry>

  <entry>
    <title>VirtulaBox + Vagrant——Linux虚拟环境好伴侣</title>
    <link href="https://jontylee.github.io/virtual-linux/"/>
    <id>https://jontylee.github.io/virtual-linux/</id>
    <published>2017-03-13T16:09:53.000Z</published>
    <updated>2017-03-15T03:21:47.549Z</updated>

    <content type="html"><![CDATA[<p>作为一个苦逼的程序猿，避免不了要接触Linux系统，但对于从小被Windows系统教育起来的人来说，一时之间难以接受Linux的操作管理方式，再加上部分常用软件没有Linux版本，所以要完全将系统切换到Linux上就着实有点困难了。简单粗暴的解决方式就是拜苹果教，既可以体验炫酷的UI，也可以逐步了解到命令行的魅力。<a id="more"></a>除此之外，就需要在本地Windows系统搭建一个Linux虚拟机，来模拟代码在线上生产环境的运行状态。可用的虚拟软件也有挺多，为什么选择<a href="https://www.virtualbox.org/" target="_blank" rel="external">VirtualBox</a>和<a href="https://www.vagrantup.com/" target="_blank" rel="external">Vagrant</a>呢？两个软件都是开源免费，跨平台的，而且使用她们可以简单快速的搭建虚拟环境，同时对虚拟环境的管理也十分方便，而且网上还有根据不同开发环境制作的box虚拟镜像可供选择，比去下原始的系统镜像文件要方便。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>首先去VirtualBox和Vagrant官网下载最新版本的软件。</p>
<ul>
<li>VirtualBox：<a href="https://www.virtualbox.org" target="_blank" rel="external">https://www.virtualbox.org</a><br><img src="https://www.tuchuang001.com/images/2017/03/13/VirtualBox-Site.png" alt="VirtualBox-Site"></li>
<li>Vagrant：<a href="https://www.vagrantup.com" target="_blank" rel="external">https://www.vagrantup.com</a><br><img src="https://www.tuchuang001.com/images/2017/03/13/Vagrant-Site.png" alt="Vagrant-Site"></li>
</ul>
<p>点击下载按钮，根据当前系统平台选择软件版本，进行下载。这里我们都选windows就行，然后就静静地等他下载完成，双击打开，开始安装，一路next，选择下安装目录，等待安装完成。完成后，打开cmd或者PowerShell，执行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vagrant -v</div></pre></td></tr></table></figure></p>
<p>会输出vagrant的版本号，这里我安装的版本为1.9.1：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Vagrant 1.9.1</div></pre></td></tr></table></figure></p>
<p>证明Vagrant已安装完成，并且Vagrant命令已添加到环境变量path中。如果提示“’vagrant’ 不是内部或外部命令，也不是可运行的程序或批处理文件。”，则表明vagrant命令没有添加到path中，需要手动添加。右键桌面我的电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量，在系统变量中找到path，选中，点击编辑，将Vagrant安装目录的bin路径添加到path中，我的Vagrant安装在E:\vagrant中，添加后如下：<br><img src="https://www.tuchuang001.com/images/2017/03/13/Path-Vagrant.png" alt="Path-Vagrant"><br>然后点击确定，重启下电脑，再重新执行以上命令，查看是否正常显示。</p>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>接下来需要下载Vagrant Box虚拟镜像，首先到Vagrant Box网站 <a href="https://atlas.hashicorp.com/boxes/search" target="_blank" rel="external">https://atlas.hashicorp.com/boxes/search</a> 搜索需要的box。这里以搜索centos，按下载量排序为例：<br><img src="https://www.tuchuang001.com/images/2017/03/13/VagrantBox-Search.png" alt="VagrantBox-Search"><br>可以选择自己需要的点击进去，查看该box的具体使用和各版本发行介绍。我们以bento/centos-7.2来初始化我们的虚拟环境。<br>先新建一个文件夹来存放虚拟文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir CentOS7.2</div></pre></td></tr></table></figure></p>
<p>然后进入该文件夹，初始化配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> CentOS7.2</div><div class="line">vagrant init bento/centos-7.2</div></pre></td></tr></table></figure></p>
<p>会有以下输出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">A `Vagrantfile` has been placed <span class="keyword">in</span> this directory. You are now ready to `vagrant up` your first virtual environment! Please <span class="built_in">read</span> the comments <span class="keyword">in</span> the Vagrantfile as well as documentation on `vagrantup.com` <span class="keyword">for</span> more information on using Vagrant.</div></pre></td></tr></table></figure></p>
<p>这时CentOS7.2下会生成一个文件Vagrantfile，这样就初始化完成了。</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>用记事本或其他编辑器打开Vagrantfile，修改配置。<br>首先配置一下共享目录，这样我们就可以用主机来修改文件，编写代码，虚拟机就可以共享这些文件及修改了。找到<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># config.vm.synced_folder "../data", "/vagrant_data"</span></div></pre></td></tr></table></figure></p>
<p>去掉注释，将”../data”，修改为你主机想共享的目录，将”/vagrant_data”修改为虚拟机想挂载的目录即可，如：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">config.vm.synced_folder <span class="string">"d:/vagrant"</span>, <span class="string">"/vagrant"</span></div></pre></td></tr></table></figure></p>
<p>如果是做web开发，还需要配置一下如何用浏览器访问虚拟机，有三种方法，如果想给Vagrant Box分配一个只能主机访问的ip，找到<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># config.vm.network "private_network", ip: "192.168.33.10"</span></div></pre></td></tr></table></figure></p>
<p>去掉前面的#号，自定义一下ip地址即可。<br>如果想让局域网内的电脑都可以访问，那么找到<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># config.vm.network "public_network"</span></div></pre></td></tr></table></figure></p>
<p>去掉注释，Vagrant Box会获得一个和主机同处一个网段的ip地址。<br>不想分配ip，也可以，找到<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># config.vm.network "forwarded_port", guest: 80, host: 8080</span></div></pre></td></tr></table></figure></p>
<p>给Vagrant Box开放一个主机端口host，再配置一下虚拟机端口guset。<br>我使用的是第一种方法：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">config.vm.network <span class="string">"private_network"</span>, <span class="symbol">ip:</span> <span class="string">"192.168.33.10"</span></div></pre></td></tr></table></figure></p>
<p>至此，我们的配置修改就已完成，记得保存文件！其他的配置可以参考Vagrantfile上的说明或者去官网了解。</p>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>打开cmd或者PowerShell，进入centos7.2文件夹，启动Vagrant Box<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> e:/CentOS7.2</div><div class="line">vagrant up --provider virtualbox</div></pre></td></tr></table></figure></p>
<p>等待box下载，启动完成即可。<br><img src="https://www.tuchuang001.com/images/2017/03/14/VagrantUP.png" alt="VagrantUP"><br>可以趁着这段时间，再去下个<a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="external">Putty</a>或者<a href="http://www.netsarang.com/products/xsh_overview.html" target="_blank" rel="external">XShell</a>免费版，用于连接虚拟机。当命令执行完成后，虚拟机就已经启动完成。注意以下输出信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">default: SSH address: 127.0.0.1:2200</div><div class="line">default: SSH username: vagrant</div></pre></td></tr></table></figure></p>
<p>这是使用Putty或者XShell通过ssh连接虚拟机的ip及端口号，你的可能是127.0.0.1:2222。ssh默认的用户名和密码都是vagrant。</p>
<h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><ul>
<li>Putty<br>双击打开Putty，配置好ssh连接的ip和端口，点击open，弹出的对话框选择“是”，然后输入用户名和密码，即可成功登陆。<br><img src="https://www.tuchuang001.com/images/2017/03/14/Putty-Setting.png" alt="Putty-Setting"><br><img src="https://www.tuchuang001.com/images/2017/03/14/Putty-Login.png" alt="Putty-Login"></li>
<li>XShell<br>点击菜单栏的文件，点击新建，弹出新建对话弹窗，名称随便写一个就好，主机和端口号根据vagrant up的输出信息填写，点击确定，完成配置。<br><img src="https://www.tuchuang001.com/images/2017/03/14/XShell-New.png" alt="XShell-New"><br>再点击文件，打开，选中刚才配置的ssh，点击连接，在弹出的弹窗中输入用户名，密码。<br><img src="https://www.tuchuang001.com/images/2017/03/14/XShell-User.png" alt="XShell-User"><br><img src="https://www.tuchuang001.com/images/2017/03/14/XShell-Pwd.png" alt="XShell-Pwd"><br>登陆成功，查看下系统版本<br><img src="https://www.tuchuang001.com/images/2017/03/14/XShell-Login.png" alt="XShell-Login"></li>
</ul>
<p>连接成功后，就可以做一下web服务的配置了，详细参考<a href="../LNMP">PHP虚拟机开发环境搭建</a>。</p>
<h3 id="常用Vagrant命令"><a href="#常用Vagrant命令" class="headerlink" title="常用Vagrant命令"></a>常用Vagrant命令</h3><ul>
<li><p>帮助</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vagrant <span class="built_in">help</span></div></pre></td></tr></table></figure>
</li>
<li><p>关闭</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vagrant halt</div></pre></td></tr></table></figure>
</li>
<li><p>重启</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vagrant reload</div></pre></td></tr></table></figure>
</li>
<li><p>暂停</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vagrant <span class="built_in">suspend</span></div></pre></td></tr></table></figure>
</li>
<li><p>查看本地已安装的box</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vagrant box list</div></pre></td></tr></table></figure>
</li>
</ul>
<p>还有一些其他命令可以使用Vagrant的帮助命令来查看如何使用，或者去官网了解。</p>
]]></content>

    <summary type="html">

      &lt;p&gt;作为一个苦逼的程序猿，避免不了要接触Linux系统，但对于从小被Windows系统教育起来的人来说，一时之间难以接受Linux的操作管理方式，再加上部分常用软件没有Linux版本，所以要完全将系统切换到Linux上就着实有点困难了。简单粗暴的解决方式就是拜苹果教，既可以体验炫酷的UI，也可以逐步了解到命令行的魅力。

    </summary>

      <category term="服务器旅程" scheme="https://jontylee.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%97%85%E7%A8%8B/"/>


      <category term="Linux" scheme="https://jontylee.github.io/tags/Linux/"/>

  </entry>

</feed>
